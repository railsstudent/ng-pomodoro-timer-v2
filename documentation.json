{
  "pipes": [
    {
      "name": "ConvertSecondsToStringPipe",
      "id": "pipe-ConvertSecondsToStringPipe-fcd385f8f69dfb48087da84cf7b42e2f348f01f36a263ef6dafca51d42335cf884e28b8d5c5c91dbf0431f84811cd1d3a24e90bbf37ce8db963bdfb9ae5c3b35",
      "file": "src/app/timer/timer-display/convert-seconds-to-string.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "getPrefix",
          "args": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "\"0\" | \"\"",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "transform",
          "args": [
            {
              "name": "totalSeconds",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "totalSeconds",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "ngname": "convertSecondsToString",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'convertSecondsToString',\n})\nexport class ConvertSecondsToStringPipe implements PipeTransform {\n  private getPrefix(value: number) {\n    const ten = 10\n    return value < ten ? '0' : ''\n  }\n\n  transform(totalSeconds: number): string {\n    const secondsPerMinute = 60\n\n    const minutes = Math.floor(totalSeconds / secondsPerMinute)\n    const seconds = totalSeconds - minutes * secondsPerMinute\n\n    const strMinutes = `${this.getPrefix(minutes)}${minutes}`\n    const strSeconds = `${this.getPrefix(seconds)}${seconds}`\n\n    return `${strMinutes}:${strSeconds}`\n  }\n}\n"
    },
    {
      "name": "ConvertStatusToMessagePipe",
      "id": "pipe-ConvertStatusToMessagePipe-702d0c4d6bcef31162a865993b33f9b8222bcbb26646f3a222d3f2a2cbafe467b77c5d4c41deba4b21a7427de5032fe994ea88886eaa1e49b0dbe812717d4b63",
      "file": "src/app/timer/timer-message/convert-status-to-message.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "status",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "status",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "ngname": "convertStatusToMessage",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core'\nimport { STATUS } from '../enums'\n\n@Pipe({\n  name: 'convertStatusToMessage',\n})\nexport class ConvertStatusToMessagePipe implements PipeTransform {\n  transform(status: string): string {\n    const messageMap = {\n      [STATUS.STOP]: 'Let the countdown begin!!',\n      [STATUS.RUNNING]: 'Greatness is within sight!!',\n      [STATUS.PAUSE]: 'Never quit keep going!!',\n    }\n\n    const typedStatusString = status as keyof typeof STATUS\n    const typedStatus = STATUS[typedStatusString]\n    return messageMap[typedStatus] || ''\n  }\n}\n"
    }
  ],
  "interfaces": [],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-d402d765962ae6eb135b0f33cfbd3388200bbd16542b40cbcae15d432f0ed564fbdc70e7e4439ea540e4dc032ce3513f711837ec35fa4f5cc3d9e9f7059026f2",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "template": "<app-timer-shell></app-timer-shell>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "title",
          "defaultValue": "'ng-pomodoro-timer-v2.0'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: '<app-timer-shell></app-timer-shell>',\n})\nexport class AppComponent {\n  title = 'ng-pomodoro-timer-v2.0'\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "TimerButtonsComponent",
      "id": "component-TimerButtonsComponent-863bc4f51f2bfe2c9e0f34544069bf616a0ab42a4a6e17f75c15bb1c5bc3bfbdf56488362ee7e932251e21fca72e080f4f92c8c66d8db95735ad323bc0c8056b",
      "file": "src/app/timer/timer-buttons/timer-buttons.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-timer-buttons",
      "styleUrls": ["./timer-buttons.component.scss"],
      "styles": [],
      "template": "<div class=\"flex p-4\">\n  <span class=\"spacer\"></span>\n  <div class=\"spacer\">\n    <button class=\"start button\" aria-label=\"start timer\">Start</button>\n    <button class=\"pause button\" aria-label=\"pause timer\">Pause</button>\n    <button class=\"stop button\" aria-label=\"stop timer\">Stop</button>\n  </div>\n  <span class=\"spacer\"></span>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core'\n\n@Component({\n  selector: 'app-timer-buttons',\n  template: `\n    <div class=\"flex p-4\">\n      <span class=\"spacer\"></span>\n      <div class=\"spacer\">\n        <button class=\"start button\" aria-label=\"start timer\">Start</button>\n        <button class=\"pause button\" aria-label=\"pause timer\">Pause</button>\n        <button class=\"stop button\" aria-label=\"stop timer\">Stop</button>\n      </div>\n      <span class=\"spacer\"></span>\n    </div>\n  `,\n  styleUrls: ['./timer-buttons.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerButtonsComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\n  display: block;\n}\n\n.spacer {\n  @apply basis-1/3 grow shrink;\n}\n\n.button {\n  @apply bg-black;\n  @apply p-2;\n  @apply text-white;\n}\n",
          "styleUrl": "./timer-buttons.component.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "TimerDisplayComponent",
      "id": "component-TimerDisplayComponent-e310c3a04fa99da5888791351f3fbb238e3b603c8a71093ffdaae7295e229e59d9bd62d9fe387f6af582df1bbfb46019e9eef5e2cfa57aeb58f65c384421c929",
      "file": "src/app/timer/timer-display/timer-display.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-timer-display",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<div class=\"p-4\">\n  <p class=\"text-[12rem] leading-[0.75] text-pink-800 text-center\">\n    {{ totalSeconds | convertSecondsToString }}\n  </p>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "totalSeconds",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-timer-display',\n  template: `\n    <div class=\"p-4\">\n      <p class=\"text-[12rem] leading-[0.75] text-pink-800 text-center\">\n        {{ totalSeconds | convertSecondsToString }}\n      </p>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerDisplayComponent {\n  @Input()\n  totalSeconds: number\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n"
    },
    {
      "name": "TimerMessageComponent",
      "id": "component-TimerMessageComponent-8a8b460eb368cce0a3b9fa83205e5b314f0b507e887ad03b06557573cd558f9937f652aeb0a23636300da215d2d10882ee3290d1743059c574300509857d0e8c",
      "file": "src/app/timer/timer-message/timer-message.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-timer-message",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<div class=\"my-4 p-3\">\n  <p class=\"text-6xl text-pink-800 text-center\">{{ status }}, {{ status | convertStatusToMessage }}</p>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "status",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-timer-message',\n  template: `\n    <div class=\"my-4 p-3\">\n      <p class=\"text-6xl text-pink-800 text-center\">{{ status }}, {{ status | convertStatusToMessage }}</p>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerMessageComponent {\n  @Input()\n  status: string\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n"
    },
    {
      "name": "TimerShellComponent",
      "id": "component-TimerShellComponent-27304f9612809e763ec109a817e4992a7c3275dfc218b44c93277ee64bce1d9455c8bed8c06a874271889626c0593d54e2c2ca302c30353f90913f7ad77072db",
      "file": "src/app/timer/timer-shell/timer-shell.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-timer-shell",
      "styleUrls": [],
      "styles": [
        "\n      :host {\n        display: block;\n        height: 100vh;\n      }\n    "
      ],
      "template": "<div class=\"h-full bg-sky-400 flex flex-col justify-center\">\n  <div>\n    <app-timer-message [status]=\"status\"></app-timer-message>\n    <app-timer-display [totalSeconds]=\"totalSeconds\"></app-timer-display>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "totalSeconds",
          "defaultValue": "900",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "status",
          "defaultValue": "'STOP'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-timer-shell',\n  template: `\n    <div class=\"h-full bg-sky-400 flex flex-col justify-center\">\n      <div>\n        <app-timer-message [status]=\"status\"></app-timer-message>\n        <app-timer-display [totalSeconds]=\"totalSeconds\"></app-timer-display>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        height: 100vh;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimerShellComponent {\n  @Input()\n  totalSeconds = 900\n\n  status = 'STOP'\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n        height: 100vh;\n      }\n    \n"
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "id": "module-AppModule-394d28833d02efa6468b09e24f349f727ee5f0d4e017d330b661acc96ef041e5c46f4fc525d7aca4a021485de577144985908dc9546cf553c64c8185bfa5a8e0",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppComponent } from './app.component'\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport { TimerModule } from './timer'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FontAwesomeModule, TimerModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "TimerModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TimerButtonsModule",
      "id": "module-TimerButtonsModule-bc51306523625412425e6ed243049c6f3941db99978574da45591de77089436f0bf3fb5b9cbd7d4eb912133cf8a1c158376ccf939f7f6761fdff13de9ab8383b",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/timer/timer-buttons/timer-buttons.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TimerButtonsComponent } from './timer-buttons.component'\n\n@NgModule({\n  declarations: [TimerButtonsComponent],\n  imports: [CommonModule],\n  exports: [TimerButtonsComponent],\n})\nexport class TimerButtonsModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TimerButtonsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimerButtonsComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TimerDisplayModule",
      "id": "module-TimerDisplayModule-1c929e346011f93c5c6910ef6fd4fa64885b13cd38f48f3bf89fe4d4f26aa042f883c766387169d044767c9a417bb823b7681f256cadb62a7be33a8f888571af",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/timer/timer-display/timer-display.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ConvertSecondsToStringPipe } from './convert-seconds-to-string.pipe'\nimport { TimerDisplayComponent } from './timer-display.component'\n\n@NgModule({\n  declarations: [TimerDisplayComponent, ConvertSecondsToStringPipe],\n  imports: [CommonModule],\n  exports: [TimerDisplayComponent],\n})\nexport class TimerDisplayModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ConvertSecondsToStringPipe"
            },
            {
              "name": "TimerDisplayComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimerDisplayComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TimerMessageModule",
      "id": "module-TimerMessageModule-ae56699fc85d40854da4ebd0eb27d4c01e2af5aeebb1f3712ed569348e9155210749ac8ec1a1ebc2274e9d7a2d3ee7e14954d1e67ad76400669117160c3389b5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/timer/timer-message/timer-message.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TimerMessageComponent } from './timer-message.component'\nimport { ConvertStatusToMessagePipe } from './convert-status-to-message.pipe'\n\n@NgModule({\n  declarations: [TimerMessageComponent, ConvertStatusToMessagePipe],\n  imports: [CommonModule],\n  exports: [TimerMessageComponent],\n})\nexport class TimerMessageModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ConvertStatusToMessagePipe"
            },
            {
              "name": "TimerMessageComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimerMessageComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TimerModule",
      "id": "module-TimerModule-af0cd81c17c092043a0abcbe58eff7633f57c7b87b01168060d31628ab9e17817ff89b41df774d9fda164522b38c31a8cec56b3555b25c73e81575386912cc0c",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/timer/timer.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TimerShellModule } from './timer-shell'\nimport { TimerDisplayModule } from './timer-display'\nimport { TimerMessageModule } from './timer-message'\nimport { TimerButtonsModule } from './timer-buttons'\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, TimerDisplayModule, TimerShellModule, TimerMessageModule, TimerButtonsModule],\n  exports: [TimerShellModule],\n})\nexport class TimerModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "TimerButtonsModule"
            },
            {
              "name": "TimerDisplayModule"
            },
            {
              "name": "TimerMessageModule"
            },
            {
              "name": "TimerShellModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimerShellModule"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TimerShellModule",
      "id": "module-TimerShellModule-1c08592f9de5b5a27d7f6d785ce857bfe149e420ba5af3528161225d3f34fb55e2b85313ee5e9c69610232610322a9f32b786045b5b10cf86740fc2ffda59b26",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/timer/timer-shell/timer-shell.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TimerShellComponent } from './timer-shell.component'\nimport { TimerDisplayModule } from '../timer-display'\nimport { TimerMessageModule } from '../timer-message'\n\n@NgModule({\n  declarations: [TimerShellComponent],\n  imports: [CommonModule, TimerDisplayModule, TimerMessageModule],\n  exports: [TimerShellComponent],\n})\nexport class TimerShellModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TimerShellComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "TimerDisplayModule"
            },
            {
              "name": "TimerMessageModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimerShellComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: true,\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false,\n}"
      },
      {
        "name": "FiveMinutesTimer",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LessThanTenMinutes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-display/timer-display.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LessThanTenSeconds",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-display/timer-display.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Pause",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-message/timer-message.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-buttons/time-butons.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-display/timer-display.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "literal type"
      },
      {
        "name": "Running",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-message/timer-message.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Stop",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-message/timer-message.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<AppComponent>",
        "defaultValue": "(args: AppComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-buttons/time-butons.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<TimerButtonsComponent>",
        "defaultValue": "(args: TimerButtonsComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-display/timer-display.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<TimerDisplayComponent>",
        "defaultValue": "(args: TimerDisplayComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-message/timer-message.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<TimerMessageComponent>",
        "defaultValue": "(args: TimerMessageComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<TimerShellComponent>",
        "defaultValue": "(args: TimerShellComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Zero",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/timer/timer-display/timer-display.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      }
    ],
    "functions": [],
    "typealiases": [],
    "enumerations": [
      {
        "name": "STATUS",
        "childs": [
          {
            "name": "STOP",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "STOP"
          },
          {
            "name": "PAUSE",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "PAUSE"
          },
          {
            "name": "RUNNING",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "RUNNING"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/timer/enums/status.enum.ts"
      }
    ],
    "groupedVariables": {
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: true,\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false,\n}"
        }
      ],
      "src/app/timer/timer-shell/timer-shell.stories.ts": [
        {
          "name": "FiveMinutesTimer",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-shell/timer-shell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<TimerShellComponent>",
          "defaultValue": "(args: TimerShellComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/timer/timer-display/timer-display.stories.ts": [
        {
          "name": "LessThanTenMinutes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-display/timer-display.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "LessThanTenSeconds",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-display/timer-display.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-display/timer-display.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-display/timer-display.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<TimerDisplayComponent>",
          "defaultValue": "(args: TimerDisplayComponent) => ({\n  props: args,\n})"
        },
        {
          "name": "Zero",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-display/timer-display.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "src/app/timer/timer-message/timer-message.stories.ts": [
        {
          "name": "Pause",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-message/timer-message.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Running",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-message/timer-message.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Stop",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-message/timer-message.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-message/timer-message.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<TimerMessageComponent>",
          "defaultValue": "(args: TimerMessageComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/app.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<AppComponent>",
          "defaultValue": "(args: AppComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/timer/timer-buttons/time-butons.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-buttons/time-butons.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/timer/timer-buttons/time-butons.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<TimerButtonsComponent>",
          "defaultValue": "(args: TimerButtonsComponent) => ({\n  props: args,\n})"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {
      "src/app/timer/enums/status.enum.ts": [
        {
          "name": "STATUS",
          "childs": [
            {
              "name": "STOP",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "STOP"
            },
            {
              "name": "PAUSE",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "PAUSE"
            },
            {
              "name": "RUNNING",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "RUNNING"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/timer/enums/status.enum.ts"
        }
      ]
    },
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/app.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-buttons/time-butons.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-buttons/time-butons.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-buttons/timer-buttons.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimerButtonsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/convert-seconds-to-string.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "ConvertSecondsToStringPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimerDisplayComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LessThanTenMinutes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LessThanTenSeconds",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-display/timer-display.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Zero",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/convert-status-to-message.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "ConvertStatusToMessagePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/timer-message.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimerMessageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/timer-message.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Pause",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/timer-message.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Running",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/timer-message.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Stop",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-message/timer-message.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-shell/timer-shell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimerShellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FiveMinutesTimer",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/timer/timer-shell/timer-shell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
